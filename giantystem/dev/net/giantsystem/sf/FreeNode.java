/*
 *GiANT - Graphical Algebra System
 *
 *Copyright (C) 2005  Aneesh Karve, e33nflow@users.sourceforge.net
 *
 *This program is free software; you can redistribute it and/or
 *modify it under the terms of the GNU General Public License
 *as published by the Free Software Foundation; either version 2
 *of the License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *GNU General Public License for more details.
 *
 *You should have received a copy of the GNU General Public License
 *along with this program; if not, write to the Free Software
 *Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.*/

/*
 * FreeNode.java
 *
 * Created on June 3, 2005, 10:02 AM
 */

package net.giantsystem.sf;


import javax.swing.JPanel;
import javax.swing.JComponent;



/**
 * Provide nodes for the GUI tree implemented by <CODE>FreeTree</CODE>. These nodes
 * can be active or inactive; when opened the display any contents the user can pack
 * into a <CODE>JPanel</CODE>.
 * @author karve
 * @see FreeTree
 */
public class FreeNode extends javax.swing.JPanel {
	/**
	 * text color for titles of disabled nodes
	 */
	public final static java.awt.Color DISABLED = new java.awt.Color(150, 150, 150);
	/**
	 * text color for titles of active nodes
	 */
	public final static java.awt.Color ACTIVE = new java.awt.Color(0, 0, 0);
	
	/**
	 * what this node displays when expanded
	 */
	private JComponent contents;
	/**
	 * constructor
	 * @param title title for the node
	 * @param c node contents
	 */
	public FreeNode(String title, JComponent c) {
		initComponents();
		//TODO...set the font in a platform independent way!
			//the form editor will not make this happen
		nodeButton.setFont(new java.awt.Font("Lucida Grande", 0, 13));
		setTitle(title);
		contentPanel.add(c, java.awt.BorderLayout.CENTER);
		contents = c;
	}
	
	/**
	 * constructor
	 * @param title node title
	 * @param c contents
	 * @param b specifies whether or not this node is enabled (true) or disabled
	 * (false)
	 */
	public FreeNode(String title, JComponent c, boolean b) {
		this(title, c);
		setEnabled(false);
	}
	
	/**
	 * 
	 * @return <CODE>JComponent</CODE> contents of this node
	 */
	public JComponent getContents(){
		return contents;
	}
	
	/**
	 * set the title text for this node
	 * @param t title
	 */
	public void setTitle(String t){
		nodeButton.setText( t);
	}
	
	/**
	 * set enabled state
	 * @param b true to enable; false otherwise
	 */
	public void setEnabled(boolean b){
		if(b)
			nodeButton.setForeground(ACTIVE);
		else
			nodeButton.setForeground(DISABLED);
	}
	
	/**
	 * expand this node
	 */
	public void expand(){
		if(!nodeButton.isSelected())
			nodeButton.setSelected(true);
		contentArea.add(contentShownPanel, java.awt.BorderLayout.CENTER);
		revalidate();
		repaint();
	}
	
	/**
	 * collapse this node
	 */
	public void collapse(){
		if(nodeButton.isSelected())
			nodeButton.setSelected(false);
		contentArea.removeAll();
		revalidate();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        contentShownPanel = new javax.swing.JPanel();
        contentPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        nodeButton = new javax.swing.JRadioButton();
        contentArea = new javax.swing.JPanel();
        endNodeSeparator = new javax.swing.JSeparator();

        contentShownPanel.setLayout(new java.awt.BorderLayout());

        contentPanel.setLayout(new java.awt.BorderLayout());

        contentPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 6, 1, 1)));
        contentShownPanel.add(contentPanel, java.awt.BorderLayout.CENTER);

        setLayout(new java.awt.BorderLayout());

        titlePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        nodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nodeClosed.png")));
        nodeButton.setIconTextGap(0);
        nodeButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nodeButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nodeOpening.png")));
        nodeButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nodeOpened.png")));
        nodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeButtonActionPerformed(evt);
            }
        });

        titlePanel.add(nodeButton);

        add(titlePanel, java.awt.BorderLayout.NORTH);

        contentArea.setLayout(new java.awt.BorderLayout());

        add(contentArea, java.awt.BorderLayout.CENTER);

        endNodeSeparator.setMaximumSize(new java.awt.Dimension(32767, 2));
        add(endNodeSeparator, java.awt.BorderLayout.SOUTH);

    }
    // </editor-fold>//GEN-END:initComponents

	private void nodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeButtonActionPerformed
		if(nodeButton.isSelected())
			expand();
		else
			collapse();
	}//GEN-LAST:event_nodeButtonActionPerformed
	
	//see NetBeans .form (Design View) for more info. on the following variables
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentArea;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JPanel contentShownPanel;
    private javax.swing.JSeparator endNodeSeparator;
    private javax.swing.JRadioButton nodeButton;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
	
}
