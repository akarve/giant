/*
 *GiANT - Graphical Algebra System
 *
 *Copyright (C) 2005  Aneesh Karve, e33nflow@users.sourceforge.net
 *
 *This program is free software; you can redistribute it and/or
 *modify it under the terms of the GNU General Public License
 *as published by the Free Software Foundation; either version 2
 *of the License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *GNU General Public License for more details.
 *
 *You should have received a copy of the GNU General Public License
 *along with this program; if not, write to the Free Software
 *Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.*/
/*
 * InfoTable.java
 *
 * Created on May 16, 2005, 7:22 PM
 */

package net.giantsystem.sf;
import javax.swing.table.TableColumn;
/**
 * Provide custom <CODE>JTable</CODE> for displaying invariants
 * @author karve
 */
public class InfoTable extends javax.swing.JTable {
    /**
     * Index of column in which the name of an invariant is found
     */
    public static final int NAME_COL = 0;
    /**
     * Index of column in which the value of an invariant is found
     */
    public static final int VAL_COL = 1;
    /**
     * Index of column in which the <I>variable</I> name of an invariant is found
     */
    public final static int VAR_COL = 2;    //auto variable names go here
    /**
     * Width of the name column
     */
    public final static int NAME_COL_WID = 120;
    /**
     * Width of the variable column
     */
    public final static int VAR_COL_WID = 50;
    /**
     * Width of the value column
     */
    public final static int VAL_COL_WID = 200;
    /**
     * Column widths for tables with 2 columns
     */
    public static final int[] COL_WIDS2 = {NAME_COL_WID, VAL_COL_WID};
    /**
     * Column widths for tables with 3 columns
     */
    public static final int[] COL_WIDS3 = {NAME_COL_WID, VAL_COL_WID, VAR_COL_WID};
    
    /**
     * Text informing the user to double-click for a calculation
     */
    public final static String DOUBLE_CLICK_CALC = KASHTerm.enclose("double-click to calculate");
    /**
     * Default titles for columns (currently all empty)
     */
    public final static String[] COL_TITLES = {"","",""};


    
    /**
     * Creates new form BeanForm
     * @param data 2D array containing data that will populate the table
     */
    public InfoTable(final Object[][] data) {
		initComponents();
        //cross-platform; want to be sure unicode math chars are present
		//removesetFont(new java.awt.Font("Lucida Grande", 0, 12));
		
		setModel(new javax.swing.table.DefaultTableModel(data, COL_TITLES) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        
        final int cols = getModel().getColumnCount();
        final int[] wids = cols == 2 ? COL_WIDS2 : COL_WIDS3;
        
        if(cols > wids.length)
            throw new AssertionError(cols + "columns, but only " + wids.length + " column widths");

        for(int i = 0; i < cols; i++){
            TableColumn column = getColumnModel().getColumn(i);
            column.setPreferredWidth(wids[i]);
        }
    }
    
    /**
     * Called when a user double-click is detected
     * @param evt mouse click
     */
    protected void doubleClickHandler(java.awt.event.MouseEvent evt){
        return;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.background"));
        setDragEnabled(true);
        setGridColor(new java.awt.Color(153, 153, 153));
        setShowVerticalLines(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

    }
    // </editor-fold>//GEN-END:initComponents

    /**
     * First receiver for mouse clicks; any double-clicks will be dispatched to 
     * <CODE>doubleClickHandler()</CODE>
     * @param evt mouse click
     * @see #doubleClickHandler
     */
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if(evt.getClickCount()==2)
            doubleClickHandler(evt);
    }//GEN-LAST:event_formMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}